{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/CollisionError.js","webpack:///./src/Position.js","webpack:///./src/Cell.js","webpack:///./src/ViewPort.js","webpack:///./src/World.js","webpack:///./src/HtmlCanvas.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CollisionError","residingCell","collidingCell","_classCallCheck","this","Position","x","y","Position_classCallCheck","position","coords","exec","console","log","concat","Cell","Cell_classCallCheck","animated","neighbours","cell","animate","isAnimate","tickWhenAnimate","tickWhenInanimate","shouldDie","die","shouldLive","liveNeighbours","length","newNeighbours","_toConsumableArray","hasLessThan2LiveNeighbours","hasMoreThan3LiveNeighbours","has3LiveNeighbours","filter","neighbour","ViewPort","topLeft","bottomRight","ViewPort_classCallCheck","World","World_classCallCheck","grid","Map","cells","_this","forEach","seedCell","emptyPositionInRange","nextGeneration","viewPort","boundaries","tickCell","cellAt","nextGenCell","addNeighbours","neighboursOf","tick","removeNeighbours","set","toString","positionInRange","has","dead","Math","floor","random","deadCell","top","topRight","left","right","bottomLeft","bottom","Array","from","values","positions","keys","fromString","toSmallest","smallest","min","toBiggest","biggest","max","topMost","map","reduce","leftMost","bottomMost","rightMost","HtmlCanvas","canvas","HtmlCanvas_classCallCheck","context","getContext","scale","world","fillStyle","fillRect","seed","alive","canvasEl","document","getElementById","viewport","width","height","print","frame","addEventListener","draw","requestAnimationFrame","cancelAnimationFrame"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class CollisionError {\n  constructor(residingCell, collidingCell) {\n    this.collidingCell = collidingCell;\n    this.residingCell = residingCell;\n  }\n}\n\nexport default CollisionError;\n","export default class Position {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  static fromString(position) {\n    const coords = /\\((-?\\d+), (-?\\d+)\\)/.exec(position);\n    if (!coords) {\n      console.log({ position });\n    }\n    return new Position(coords[1], coords[2]);\n  }\n\n  topLeft() {\n    return new Position(this.x - 1, this.y - 1);\n  }\n\n  top() {\n    return new Position(this.x, this.y - 1);\n  }\n\n  topRight() {\n    return new Position(this.x + 1, this.y - 1);\n  }\n\n  left() {\n    return new Position(this.x - 1, this.y);\n  }\n\n  right() {\n    return new Position(this.x + 1, this.y);\n  }\n\n  bottomLeft() {\n    return new Position(this.x - 1, this.y + 1);\n  }\n\n  bottom() {\n    return new Position(this.x, this.y + 1);\n  }\n\n  bottomRight() {\n    return new Position(this.x + 1, this.y + 1);\n  }\n\n  toString() {\n    return `(${this.x}, ${this.y})`;\n  }\n}\n","class Cell {\n  constructor() {\n    this.animated = false;\n    this.neighbours = [];\n  }\n\n  static dead() {\n    return new Cell();\n  }\n\n  static alive() {\n    const cell = new Cell();\n    cell.animate();\n\n    return cell;\n  }\n\n  tick() {\n    return this.isAnimate()\n      ? this.tickWhenAnimate()\n      : this.tickWhenInanimate();\n  }\n\n  tickWhenAnimate() {\n    if (!this.shouldDie()) {\n      return;\n    }\n\n    this.die();\n  }\n\n  tickWhenInanimate() {\n    if (!this.shouldLive()) {\n      return;\n    }\n\n    this.animate();\n  }\n\n  has3LiveNeighbours() {\n    return this.liveNeighbours.length === 3;\n  }\n\n  isInanimate() {\n    return this.animated === false;\n  }\n\n  isAnimate() {\n    return this.animated === true;\n  }\n\n  animate() {\n    this.animated = true;\n  }\n\n  addNeighbours(newNeighbours) {\n    this.neighbours = [...this.neighbours, ...newNeighbours];\n  }\n\n\n  die() {\n    this.animated = false;\n  }\n\n  hasLessThan2LiveNeighbours() {\n    return this.liveNeighbours.length < 2;\n  }\n\n  get liveNeighbours() {\n    return this.neighbours.filter(neighbour => neighbour.isAnimate());\n  }\n\n  hasMoreThan3LiveNeighbours() {\n    return this.liveNeighbours.length > 3;\n  }\n\n  shouldDie() {\n    return this.hasLessThan2LiveNeighbours() || this.hasMoreThan3LiveNeighbours();\n  }\n\n  shouldLive() {\n    return this.has3LiveNeighbours();\n  }\n\n  removeNeighbours() {\n    this.neighbours = [];\n  }\n}\n\nexport default Cell;\n","export default class ViewPort {\n  constructor(topLeft, bottomRight) {\n    this.topLeft = topLeft;\n    this.bottomRight = bottomRight;\n  }\n}\n","import CollisionError from './CollisionError';\nimport Position from './Position';\nimport Cell from './Cell';\nimport ViewPort from './ViewPort';\n\nclass World {\n  constructor(bottomRight) {\n    this.grid = new Map();\n    this.bottomRight = bottomRight;\n  }\n\n  get cells() {\n    return Array.from(this.grid.values());\n  }\n\n  get boundaries() {\n    const positions = Array.from(this.grid.keys(), position => Position.fromString(position));\n    const toSmallest = (smallest, value) => Math.min(smallest, value);\n    const toBiggest = (biggest, value) => Math.max(biggest, value);\n\n    const topMost = positions.map(position => position.y).reduce(toSmallest);\n    const leftMost = positions.map(position => position.x).reduce(toSmallest);\n    const bottomMost = positions.map(position => position.y).reduce(toBiggest);\n    const rightMost = positions.map(position => position.x).reduce(toBiggest);\n\n    return new ViewPort(\n      new Position(leftMost - 1, topMost - 1),\n      new Position(rightMost + 1, bottomMost + 1),\n    );\n  }\n\n  seed(cells) {\n    cells.forEach((cell) => {\n      this.seedCell(cell, this.emptyPositionInRange());\n    });\n    console.log('seeded!');\n  }\n\n  tick() {\n    const nextGeneration = new Map();\n    const viewPort = this.boundaries;\n\n    for (let { y } = viewPort.topLeft; y <= viewPort.bottomRight.y; y++) {\n      for (let { x } = viewPort.topLeft; x <= viewPort.bottomRight.x; x++) {\n        this.tickCell(x, y, nextGeneration);\n      }\n    }\n\n\n    // get the bounding box\n\n    // get the topLeftMost cell\n    // get min of that and veiwport topLeftMost\n    // get the bottomRightMost cell\n    // get min of that and viewport bottomRightMost\n\n    // add a perimeter to it\n\n    // traverse the perimeter, ticking the dead cells\n\n    // traverse the top and bottom rows\n    // for (let { x } = viewPort.topLeft; x <= viewPort.bottomRight.x; x++) {\n    //   this.tickCell(x, viewPort.topLeft.y, nextGeneration);\n    //   this.tickCell(x, viewPort.bottomRight.y, nextGeneration);\n    // }\n\n    // for (let { y } = viewPort.topLeft; y <= viewPort.bottomRight.y; y++) {\n    //   this.tickCell(viewPort.topLeft.x, y, nextGeneration);\n    //   this.tickCell(viewPort.bottomRight.x, y, nextGeneration);\n    // }\n\n    // visit each live cell and tick it\n    // this.grid.forEach((cell, coords) => {\n    //   const position = Position.fromString(coords);\n    //   this.tickCell(position.x, position.y, nextGeneration);\n    // });\n\n    this.grid = nextGeneration;\n  }\n\n  tickCell(x, y, nextGeneration) {\n    const position = new Position(x, y);\n    const cell = this.cellAt(position);\n\n    const nextGenCell = new Cell();\n    if (cell.isAnimate()) {\n      nextGenCell.animate();\n    }\n\n    nextGenCell.addNeighbours(this.neighboursOf(position));\n    nextGenCell.tick();\n    nextGenCell.removeNeighbours();\n\n    if (nextGenCell.isAnimate()) {\n      nextGeneration.set(position.toString(), nextGenCell);\n    }\n  }\n\n  emptyPositionInRange() {\n    let position;\n    do {\n      position = this.positionInRange();\n    } while (this.grid.has(position.toString()));\n    return position;\n  }\n\n  seedCell(cell, position) {\n    const key = position.toString();\n\n    if (this.grid.has(key)) {\n      throw new CollisionError(this.grid.get(key), cell);\n    }\n\n    this.grid.set(key, cell);\n  }\n\n  cellAt(position) {\n    const key = position.toString();\n    return this.grid.get(key) || Cell.dead();\n  }\n\n  positionInRange() {\n    const x = Math.floor(Math.random() * this.bottomRight.x);\n    const y = Math.floor(Math.random() * this.bottomRight.y);\n\n    return new Position(x, y);\n  }\n\n  neighboursOf(position) {\n    const deadCell = Cell.dead();\n    return [\n      this.grid.get(position.topLeft().toString()) || deadCell,\n      this.grid.get(position.top().toString()) || deadCell,\n      this.grid.get(position.topRight().toString()) || deadCell,\n\n      this.grid.get(position.left().toString()) || deadCell,\n      this.grid.get(position.right().toString()) || deadCell,\n\n      this.grid.get(position.bottomLeft().toString()) || deadCell,\n      this.grid.get(position.bottom().toString()) || deadCell,\n      this.grid.get(position.bottomRight().toString()) || deadCell,\n    ];\n  }\n}\n\nexport default World;\n","import Position from './Position';\n\nexport default class HtmlCanvas {\n  constructor(canvas) {\n    this.context = canvas.getContext('2d');\n    this.context.scale(5, 5);\n  }\n\n  print(world, viewPort) {\n    for (let { y } = viewPort.topLeft; y <= viewPort.bottomRight.y; y++) {\n      for (let { x } = viewPort.topLeft; x <= viewPort.bottomRight.x; x++) {\n        const cell = world.cellAt(new Position(x, y));\n        this.context.fillStyle = cell.isAnimate() ? 'black' : 'white';\n        this.context.fillRect(x, y, 1, 1);\n      }\n    }\n  }\n}\n","import World from './World';\nimport Position from './Position';\nimport Cell from './Cell';\nimport ViewPort from './ViewPort';\nimport HtmlCanvas from './HtmlCanvas';\n\nconst world = new World(new Position(99, 99));\nconst glider = [\n  new Position(1, 0),\n  new Position(2, 1),\n  new Position(0, 2),\n  new Position(1, 2),\n  new Position(2, 2),\n];\n// glider.forEach(position => world.seedCell(Cell.alive(), position));\n\nworld.seed(Array.from({ length: 5000 }, () => Cell.alive()));\n\nconst canvasEl = document.getElementById('the-canvas');\n\nconst viewport = new ViewPort(\n  new Position(0, 0),\n  new Position(canvasEl.width - 1, canvasEl.height - 1),\n);\nconsole.log(viewport);\n\nconst canvas = new HtmlCanvas(canvasEl);\n\nconsole.log({\n  world,\n  canvas,\n  viewport,\n});\n\ncanvas.print(world, viewport);\nlet frame = null;\ndocument.getElementById('start-btn').addEventListener('click', () => {\n  const draw = () => {\n    world.tick();\n    canvas.print(world, viewport);\n    frame = requestAnimationFrame(draw);\n  };\n  draw();\n});\n\ndocument.getElementById('stop-btn').addEventListener('click', () => {\n  cancelAnimationFrame(frame);\n});\n\ndocument.getElementById('tick-btn').addEventListener('click', () => {\n  world.tick();\n  canvas.print(world, viewport);\n  // clearInterval(interval);\n});\n"],"sourceRoot":""}